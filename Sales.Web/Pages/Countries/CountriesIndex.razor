@page "/countries"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
<h3>Countries</h3>

<a class="btn btn-primary" href="/countries/create">Add new country</a>
<GenericList MyList="Countries">
    <Body>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>New Country</th>
                        <th>Country</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var country in Countries!)
                    {
                        <tr>
                            <td>
                                <a class="btn btn-warning" href="/countries/edit/@country.ID">Edit</a>
                            <button class="btn btn-danger" @onclick=@(()=>DeleteAsync(country.ID)) href="/countries/edit/@country.ID">Delete</button>
                            </td>
                            <td>
                                @country.Name
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
      
    </Body>
</GenericList>
@code {
    public List<Country>? Countries{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }
    private async Task LoadAsync()
    {
        var responseHttp = await repository.Get<List<Country>>("/api/countries");
        Countries = responseHttp.Response;
    }

    private async Task DeleteAsync(int id)
    {
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmation",
                Text = "Are you sure you want to delete this country register?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Yes"
            });

        var confirm = string.IsNullOrEmpty(result.Value);
        if (confirm)
        {
            return;
        }

        var responseHttp = await repository.Delete<Country>($"/api/countries/{id}");
        if (responseHttp.Error)
        {

        }
        await LoadAsync();
    }
}
